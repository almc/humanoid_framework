roslaunch nao_bringup nao_full.launch nao_ip:=192.168.1.3 roscore_ip:=192.168.1.210
roslaunch nao_bringup nao_full_py.launch nao_ip:=192.168.1.3 roscore_ip:=192.168.1.210
roslaunch ar_track_alvar nao_tracker.launch

router: admin/cvap2016
wireless: asus/rplcvap2016


/opt/ros/indigo/share/naoqi_sensors_py/launch/camera.launch
/opt/ros/indigo/share/naoqi_sensors_py/share

/src/naoqi_driver/src/converters/camera_info_definitions.hpp

indigo/ camera.launch

rosrun camera_calibration cameracalibrator.py --size 7x6 --square 0.108 image:=/nao_robot/camera/front/image_raw camera:=/camera --no-service


# time.sleep(2)
# close_hand("RHand", motionProxy)
# time.sleep(2)
# object_in_hand = check_hand("RHand", motionProxy, memoryProxy)
# print(object_in_hand)


# robot_balance(motionProxy, False) # to prevent the rest of the body from moving
  # target_marker = []
  # target_loop_id = 0 # 0: no insertion, 1: anchoring entity, 2: rope loop, 3: dynamic
  # angles = {'wrist_yaw_left': +0.0, 'wrist_yaw_right': +0.0}
  # delta_pos_marker = [0, 0, 0] # synergestic
  # delta_pos_hand = [0, 0, 0]
  # abs_pos_hand = [0.12, -0.08, 0.40]
  # object_in_hand = move(marker_list, loop_list, target_marker, target_loop_id,
  #                       delta_pos_marker, delta_pos_hand, abs_pos_hand, "RArm", "RHand", angles,
  #                       "Open", "Stay", "bottom", False, motionProxy, memoryProxy, speechProxy, True, False)
  #
  # # time.sleep(1)
  #
  # target_marker = []
  # target_loop_id = 0 # 0: no insertion, 1: anchoring entity, 2: rope loop, 3: dynamic
  # angles = {'wrist_yaw_left': +0.0, 'wrist_yaw_right': +0.0}
  # delta_pos_marker = [0, 0, 0] # synergestic
  # delta_pos_hand = [0, 0, 0]
  # abs_pos_hand = [0.12, 0.08, 0.40]
  # object_in_hand = move(marker_list, loop_list, target_marker, target_loop_id,
  #                       delta_pos_marker, delta_pos_hand, abs_pos_hand, "LArm", "LHand", angles,
  #                       "Open", "Stay", "bottom", False, motionProxy, memoryProxy, speechProxy, True, False)
